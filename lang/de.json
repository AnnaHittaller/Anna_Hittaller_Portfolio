{
  "about-me": "Über mich",
  "my-skills": "Meine Skills",
  "my-works": "Projekte",
  "contact-me": "Kontakt",
  "resume-btn": "Lebenslauf",
  "download": "PDF herunterladen",
  "hi": "Hi, ich bin...",
  "frontend": "Frontend ",
  "webdev": "Webentwicklerin...",
  "about": "Es war einmal eine Büroangestellte, die “Was ist CSS?” googelte, während sie versuchte, eine Website für ihren Nebenjob als Katzensitterin einzurichten.\nHeute, ein paar Jahre später, bin ich mit einer soliden Grundlage in der Webentwicklung und einem unermüdlichen Lerndrang ausgestattet und bereit, nie mehr zurückzublicken und aus meiner Passion für Coding eine erfolgreiche Karriere zu schmieden. (Ich mag Katzen allerdings immer noch sehr gerne.)",
  "about-2": "Ich glaube, dass die perfekte Web-Applikation nicht nur einwandfrei funktioniert, sondern auch einen bleibenden Eindruck hinterlässt. Angetrieben von meinem Enthusiasmus für Technologie und Design bin ich bestrebt, meine Kreativität, meine Problemlösungsmentalität und mein Engagement einzusetzen, um eindringliche Online-Erlebnisse zu schaffen, die die Nutzer begeistern und die Erwartungen der Kunden übertreffen.",
  "about-3": "Ich bin derzeit auf der Suche nach Möglichkeiten und möchte mich einem Team anschließen, in dem ich meine Fachkenntnisse weiter ausbauen und beruflich wachsen kann. Wenn Du glaubst, dass ich eine wertvolle Ergänzung für Dein Team sein könnte, würde ich mich freuen, von Dir zu hören!",
  "and-I": "...und ich",
  "create": " kreiere Dinge mit:",
  "some": "Einige",
  "things": " der Dinge, die ich entwickelt habe:",
  "read-more": "Weiterlesen",
    "mymdb-summary": "Verliere nie wieder den Überblick über deine Film-Must-Watch-Liste. Mit einer benutzerfreundlichen Oberfläche und einer Reihe von Funktionen bietet MyMDb eine nahtlose Möglichkeit, deine Watchlist zu verwalten und über die neuesten Filme auf dem Laufenden zu bleiben.",
  "catspotter-summary": "Eine Community-Web-App, die verloren gegangenen Katzen hilft, nach Hause zu kommen.\nMit leistungsstarken Visualisierungstools, Infoblättern, interaktiven Karten und SVGs, einem Datenabgleichsalgorithmus, einstellbaren Standortpräferenzen und detaillierten Filtermöglichkeiten bietet diese Fullstack Applikation alles, was ein Nutzer braucht, um verlorene Katzen schnell zu finden und der Held des Tages zu sein.",
  "bird-summary": "Die App, die jeder Naturliebhaber braucht: Sie hilft dir zu entscheiden, was zu tun ist, wenn du ein Vogelbaby findest. Dieser benutzerfreundliche Fragebogen wurde in React erstellt und verwendet eine bedingte Darstellung, die auf den Antworten des Users basiert.",
  "react-libraries": "React-Bibliotheken",
  "cooking-summary": "Ein Fullstack-Projekt zum Hochladen, Teilen und Speichern von Rezepten im eigenen Rezeptbuch des angemeldeten Benutzers. Ursprünglich mit Contentful gebaut, aber später modifiziert, um meine eigene RESTful API für die Benutzer- und Rezeptverwaltung zu verwenden.",
  "cooking-light-summary": "Logge dich ein, lade Rezepte hoch, teile sie und speichere sie in deinem eigenen Rezeptbuch.",
  "jiu-jitsu-summary": "Diese Website, entwickelt für einen lokalen Jiu-Jitsu-Sportverein, bietet eine klare Seitenstruktur und ein responsives Design.",
  "other": "Andere",
  "noteworthy": " bemerkenswerte ",
  "projects": "Projekte:",
  "usagi-summary": "Du hast keine Idee, was zu kochen? Frag den Bunny! Eine App, um mir mit randomisierten, aber filterbaren Kochideen zu helfen.",
  "mini-yelp": "Mini YELP-Ähnlicher Server",
  "mini-yelp-summary": "Ein Express-Server, der mehrere Routen für den Backend-Teil eines kollaborativen Fullstack-Projekts bereitstellt, um neue Restaurants auf einer Website aufzulisten und hinzuzufügen. ",
  "ip-summary": "Eine kleine, kollaborative, einseitige App, die die IP-Adresse des Users auf einer Karte anzeigt, zusammen mit einigen zusätzlichen Informationen über das Land.",
  "check-out": "Besuche meine ",
  "github": "GitHub",
  "check-out-2": "-Seite, um alle anderen Projekte zu checken, an denen ich gearbeitet habe",
  "get": "Nimm",
  "touch": " Kontakt auf:",
  "chat": "Lass uns plaudern oder sieh dir mein ",
  "profile": "-Profil an, wenn du mehr über mich wissen möchtest.",
  "linkedin": "LinkedIn",
  "built-with": "Entwickelt mit ",
  "by": " von Anna Hittaller © 2023",
  "send": "Senden",
  "error": "Fehler 404",
  "ooops": "Ups, ",
  "not-found": "diese Seite wurde nicht gefunden",
  "home": "Zurück zur Homepage",
  "project-details": "Projekt Details",
  "features": "Wichtigste Funktionen:",
  "challenges" :"Herausforderungen & Lösungen:",
  "tech": "Verwendete Technologien:",
  "back": "Zurück zur Übersicht",
  "p1-1": "Stell dir eine Welt vor, in der keine entlaufene Katze unbemerkt bleibt. Das ist es, was Catspotter erreichen will.",
  "p1-2": "Catspotter ist eine beeindruckende Community-Webapp, die entwickelt wurde, um die rasche Rückführung entlaufener Katzen zu ihren Besitzern zu erleichtern, indem die kollektive Kraft von Nachbarschaften und Gemeinschaften genutzt wird. Catspotter wurde bei mir als Abschlussprojekt für das Web- und App-Entwickler-Bootcamp der WBS Coding School entwickelt und ermöglicht es den Nutzern, Katzensichtungen zu melden, entlaufene Katzen zu registrieren, Match-Benachrichtigungen zu erhalten und all die verschiedenen Daten auf einer interaktiven Karte zu visualisieren.",
  "f11-s": "Katzen sichten und melden:",
  "f11-u": "Die Power der Community ausnutzen:",
  "f11-span": "Die User können Katzensichtungen melden und so zu den gemeinsamen Suchbemühungen nach entlaufenen Stubentigern beitragen.",
  "f11-u1": "Visualisierung zu helfen:",
  "f11-span1": "Neben der Bildupload-Möglichkeit dienen die angepassten Platzhalter-SVGs als schnelles und effektives Visualisierungstool, wenn keine Fotos der Katze verfügbar sind.",
  "f11-u2": "Umfassende Infoblätter:",
  "f11-span2": "Für jede gemeldete Katze stehen ausführliche Infoblätter zur Verfügung, die essentielle Daten wie Beschreibungen (Farbe, Muster, Haarlänge usw.), Kontaktinformationen zur Besitzer und ein Foto enthalten.",
  "f12-s": "Registrierung verlorener Katzen:",
  "f12-u": "Verbindung zu den Besitzern:",
  "f12-span": "Katzenbesitzer können wichtige Informationen über ihre entlaufenen Haustiere weitergeben, darunter Fotos, Beschreibungen und den letzten bekannten Aufenthaltsort sowie ihre eigenen Kontakte.",
  "f12-u1": "Verstärkung der Reichweite von Meldungen:",
  "f12-span1": "Durch die Benachrichtigung der Gemeinschaft steigen die Chancen auf eine sichere und rechtzeitige Wiedervereinigung zwischen entlaufenen Katzen und ihren Besitzern.",
  "f13-s": "Intelligente Benachrichtigungen über Matches:",
  "f13-u": "Erweiterter Algorithmus:",
  "f13-span": "Der intelligente Matching-Algorithmus von Catspotter lässt die User wissen, wenn ihre gemeldeten Sichtungen mit den Details einer verlorenen Katze übereinstimmen und umgekehrt. Farbe, Muster, Datum des Verschwindens und der Sichtung sowie die Entfernung werden ebenfalls berücksichtigt.",
  "f14-s": "Interaktive Kartenvisualisierung:",
  "f14-u": "Geografischer Einblick:",
  "f14-span": "Die von Leaflet unterstützte dynamische Karte zeigt gemeldete Katzensichtungen und verlorene Katzenstandorte an und bietet eine klare visuelle Darstellung der Aktivitäten, wobei verschiedene angepasste Kartenmarkierungen helfen, auf den ersten Blick zwischen verlorenen und gesichteten Katzendaten zu unterscheiden.",
  "f14-u1": "Gebiet von Interesse:",
  "f14-span1": "Die Benutzer können konzentrierte Gebiete mit Katzenaktivitäten identifizieren und so die gezielte Suche unterstützen.",
  "f14-u2": "Verbesserte Suche:",
  "f14-span2": "Die Verfügbarkeit umfassender Informationen und die verfügbaren Filteroptionen rationalisieren die Such- und Identifizierungsprozesse.",
  "f15-s": "Benutzerdefinierte Standortpräferenzen:",
  "f15-u": "Maßgeschneiderte User-Gebiete:",
  "f15-span": "Die User können ihre Standortpräferenzen anpassen und gewünschte Gebietsradien festlegen, um relevante Benachrichtigungen basierend auf der Nähe zu gemeldeten Sichtungen zu erhalten, was eine personalisierte Erfahrung in der gesamten App ermöglicht.",
  "future": "Zukünftige Entwicklung:",
  "future-p": "Catspotter ist ein laufendes Projekt (derzeit Version 1.0) mit Plänen für eine kontinuierliche Entwicklung und Funktionserweiterung. Zu den bevorstehenden Änderungen gehören die Verfeinerung bestehender Funktionen, die Optimierung und Überarbeitung der Codebasis und die Einführung neuer Funktionen, um die Wirkung der App weiter zu verstärken.",
  "challenges-p": "Die Entwicklung von Catspotter stellte mich vor eine Reihe spannender Herausforderungen, die mich an die Grenzen meiner Entwicklungsfähigkeiten brachten. Jedes Hindernis wurde mit Hingabe und Innovation gemeistert. Das Ergebnis ist eine visuell ansprechende und funktionale Applikation:",
  "ch1": "Präzision des Matching-Algorithmus:",
  "ch1-span": "Entwicklung eines Matching-Algorithmus, der relevante Katzensichtungen und Meldungen über entlaufene Katzen genau identifiziert. Um nur relevante Datenübereinstimmungen anzeigen zu können, implementierte ich einen mehrstufigen Algorithmus, der verschiedene Faktoren wie Ort, Zeit und Beschreibung berücksichtigt, um die Genauigkeit zu verfeinern.",
  "ch2": "Benutzerauthentifizierung und Datensicherheit:",
  "ch2-span": "Gewährleistung der Sicherheit von Benutzerdaten und Verhinderung von unbefugtem Zugriff. Ich habe Benutzerregistrierungs- und Anmeldefunktionen mit sicherem Passwort-Hashing implementiert. Ich habe JSON Web Tokens (JWT) für die Benutzerauthentifizierung und -autorisierung verwendet.",
  "ch3": "Standortbezogene Benachrichtigungen:",
  "ch3-span": "Implementierung von standortbasierten Benachrichtigungen für User, die sich in der Nähe von übereinstimmenden Katzensichtungen befinden. Ich habe eine benutzerfreundliche Interface entworfen, die es den Usern ermöglicht, ihr Gebiet und ihre Benachrichtigungspräferenzen einzustellen und anzupassen, und gleichzeitig wurde eine Backend-Logik integriert, um maßgeschneiderte Updates zu liefern.",
  "ch4": "Leistung der Kartenvisualisierung:",
  "ch4-span": "Optimierung der Leistung der interaktiven Karte, um die wachsende Zahl der gemeldeten Katzenaktivitäten zu bewältigen. Ich habe die Clustering- und Marker-Optimierungstechniken von Leaflet eingesetzt, um die Reaktionsfähigkeit der Karte zu verbessern und eine reibungslose Benutzererfahrung zu gewährleisten. Außerdem habe ich verschiedene Leaflet-Plugins integriert, um die Möglichkeiten der Standortsuche weiter zu verbessern.",
  "demo": "Die Gästelogin-Daten zum Ausprobieren der Demo-App findest Du auf GitHub!",
  "p2-1": "MyMDb vereinfacht die Verwaltung deiner Filmliste durch die Bereitstellung einer benutzerfreundlichen Plattform, die mit der TMDB-API integriert ist, um eine riesige Sammlung von Filmen zu entdecken, zu verfolgen und zu erkunden. Von der Entdeckung von Neuerscheinungen bis hin zur Priorisierung der nächsten Filme - MyMDb bietet eine umfassende Lösung für Filmfans.",
  "f21-s": "User Management:",
  "f21-u": "Authentifizierung:",
  "f21-span": "User können sich einfach registrieren und anmelden, um auf personalisierte Funktionen zuzugreifen. Der Benutzerauthentifizierungsprozess erfolgt mit Firebase Auth.",
  "f21-u1": "Speicherung von Benutzerdaten:",
  "f21-span1": "Die personalisierten Daten der Nutzer, einschließlich Themenfarben und Filmlisten, werden in Cloud Firestore gespeichert.",
  "f21-u2": "Funktion 'Passwort vergessen':",
  "f21-span2": "Benutzer können einfach ein neues Passwort abrufen, falls sie ihre Anmeldedaten vergessen haben.",
  "f21-u3": "Anpassungsmöglichkeiten:",
  "f21-span3": "Die User können ihre Erfahrung personalisieren, indem sie ihre bevorzugte Themenfarbe auswählen, die sich in der gesamten Anwendung widerspiegelt.",
  "f22-s": "Film-Management:",
  "f22-u": "Erstellen einer Watchlist:",
  "f22-span": "Nutzer können Filme zu ihrer Watchlist hinzufügen, um den Überblick über die Filme zu behalten, die sie ansehen möchten.",
  "f22-u1": "Auswahl 'Als nächstes ansehen':",
  "f22-span1": "Ermöglicht es den Nutzern, Filme zu priorisieren, indem sie sie als nächstes ansehen wollen. Diese Filme werden in einer separaten Liste angezeigt, um die Planung des nächsten Filmabends zu erleichtern.",
    "f22-u2": "Einzelne Filmseiten",
  "f22-span2": "Zeigt detaillierte Informationen über den ausgewählten Film an, einschließlich einer Zusammenfassung der Handlung, der Besetzung, der Bewertungen und mehr. Eine Liste mit 'Ähnliche Filme' soll das Interesse an weiteren Titeln wecken.",
  "f22-u3": "Filme suchen und entdecken:",
  "f22-span3": "Mithilfe der TMDB-API können Nutzer nach Filmen suchen, Neuerscheinungen entdecken und eine umfassende Filmdatenbank erkunden. Mit den Filtermöglichkeiten für Mindestbewertung und Genres können sie noch mehr relevante Ergebnisse abrufen.",
    "f22-u4": "Karussell 'Trending Now':",
  "f22-span4": "Mit einem dynamischen Karussell, das die aktuellsten Filme der Woche direkt auf der Hauptseite anzeigt, bleiben die Nutzer über die neuesten Trends auf dem Laufenden.",
  "ch21": "Datenverwaltung über Firebase und Firestore:",
  "ch21-span": "Die effektive Verarbeitung von Benutzerdaten und die Durchführung von CRUD-Operationen auf Filmlisten erforderten die parallele Ausführung von Aktionen in Firestore und Firebase. Dies verlangte die Implementierung umfassender Datenverwaltungsstrategien, um eine nahtlose Synchronisation zwischen Frontend und Backend zu gewährleisten.",
  "ch22": "Integration von Pinia für effiziente API-Aufrufe und Datenverarbeitung:",
  "ch22-span": "Die Integration von Pinia war entscheidend für die Optimierung der Datenverarbeitung und die Minimierung unnötiger API-Aufrufe an Firebase und TMDB. Durch die Nutzung der Zustandsverwaltung von Pinia konnte ich eine effiziente Verwaltung von User-Filmlisten, Themenfarben und Trendfilmen sicherstellen und so die Gesamtleistung und Reaktionsfähigkeit der App verbessern.",
  "ch23": "API-Integration:",
  "ch23-span": "Die Implementierung der Such- und Entdeckungsfunktion stellte eine Herausforderung innerhalb der Grenzen der TMDB-API dar. Die Sicherstellung optimaler Ergebnisse erforderte eine sorgfältige Verwaltung der API-Aufrufe und -Abfragen, die Behandlung von Frontend- und Backend-Fehlern und die Minimierung der abgerufenen Daten auf wesentliche Felder.",
   "p3-1":"'Hey! I found a bird!' ist eine reizvolle und benutzerfreundliche Web-Applikation sowie ein pädagogisches Tool, entwickelt mit React, um den Nutzern zu helfen, fundierte Entscheidungen zu treffen, wenn sie auf ein Vogelbaby in Not stoßen. Die App bietet eine Schritt-für-Schritt-Anleitung, wie man sich um den Vogel kümmert und ihm hilft (oder sagt einem, wenn man nicht eingreifen muss), zusammen mit ansprechenden Vogelfotos, hilfreichen Ressourcen und informativen Links zur Vogelkunde.",
  "f31-s":"Bedingt dargestellter Fragebogen:",
  "f31-u":"Interaktive Schritte:",
  "f31-span":"Die User werden durch eine Reihe von Fragen geführt, um die Situation und den Zustand des Vogelbabys zu ermitteln.",
  "f31-u1":"Maßgeschneiderte Anweisungen:",
  "f31-span1":"Auf der Grundlage der Benutzerantworten liefert die App maßgeschneiderte Anweisungen für geeignete Maßnahmen.",
  "f32-s":"Benutzerfreundliche Interface:",
  "f32-u":"Visuell ansprechend:",
  "f32-span":"Verwendung einer beruhigenden und einladenden Designästhetik, um eine positive Benutzererfahrung zu gewährleisten.",
  "f32-u1":"Responsives Design:",
  "f32-span1":"Es wurde sichergestellt, dass die App auf einer Reihe von Geräten und Bildschirmgrößen zugänglich und optisch ansprechend ist.",
  "f33-s":"Nützliche und fröhliche Extras:",
  "f33-u":"Randomisierte Galerie:",
  "f33-span":"Integration der Pexels-API, um zufällige Vogelfotos anzuzeigen, was die Erfahrung des Benutzers bereichert und die Atmosphäre der App verbessert.",
  "f33-u1":"Links zum Thema Vögel:",
  "f33-span1":"Zusammenstellung einer kuratierten Auswahl informativer Links zum Thema Vogelbeobachtung, Identifizierung von Vogelarten und Vogelrettung.",
  "ch31":"Konsistentes Design:",
  "ch31-span":"Ich musste ein einheitliches und ansprechendes Design für die gesamte App auf allen Geräten sicherstellen. Ich erstellte einen Design-Styleguide und hielt mich an vordefinierte Designmuster, um ein einheitliches Erscheinungsbild zu gewährleisten.",
  "ch32":"Kuratieren von Inhalten:",
  "ch32-span":"Ich wollte relevante und nützliche Links zur Vogelbeobachtung für die Nutzer der App auswählen. Ich recherchierte seriöse Quellen und stellte eine kuratierte Liste von Links zusammen, die mit dem Zweck der App übereinstimmen.",
  "ch33":"API-Integration und Dokumentation lesen:",
  "ch33-span":"Die Herausforderung bestand darin, eine bisher unbekannte API nahtlos in die App zu integrieren. Ich habe die API-Dokumentation studiert, Fetch-Anfragen implementiert und eine Fehlerbehandlung für die API-Antworten integriert.",
  "ch34":"Bedingtes Rendering in React:",
  "ch34-span":"In der App stellte das dynamische Rendern von Komponenten auf der Grundlage von Benutzereingaben eine Herausforderung dar. Die App musste je nach den Antworten des Benutzers auf den Fragebogen unterschiedliche Inhalte und Anweisungen anzeigen. Die Gewährleistung eines reibungslosen Benutzererlebnisses und einer präzisen Anleitung bei der Handhabung verschiedener Szenarien war entscheidend. Diese Herausforderung wurde in den folgenden Schritten angegangen:",
  "li1":"Verwendung des useState-Hooks von React, um die aktuelle Frage und den Fortschritt des Benutzers innerhalb des Fragebogens zu verwalten.",
  "li2":"Erstellung eines strukturierten questionData-Arrays mit Fragen, Antwortoptionen und zugehöriger Navigationslogik.",
  "li3":"Implementierung einer Funktion zur Verarbeitung von Benutzerantworten und zur dynamischen Aktualisierung der aktuellen Frage auf der Grundlage der nextQuestion-Referenz der ausgewählten Antwort.",
  "li4":"Es wurde sichergestellt, dass die Benutzerantworten reibungslose Übergänge zur nächsten relevanten Frage auslösen, so dass die User auf natürliche Weise durch den Fragebogen fortschreiten und bei Bedarf beliebig viele Schritte zurückspringen können."


}